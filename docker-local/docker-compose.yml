version: "3.7"

networks:
  mojaloop-net:
    name: mojaloop-net

services:
  ## Switch
  central-ledger:
    image: mojaloop/central-ledger:v13.14.1
    container_name: central-ledger
    command: sh -c "/opt/central-ledger/wait4/wait4.js central-ledger && node src/api/index.js"
    ports:
      - "3001:3001"
    volumes:
       - ./docker/central-ledger/default.json:/opt/central-ledger/config/default.json
       - ./docker/wait4:/opt/central-ledger/wait4
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=false
    networks:
      - mojaloop-net
    depends_on:
      - mysql
      - kafka
      - objstore
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root

  objstore:
    image: mongo:latest
    container_name: objstore
    # Disable logging, this container is not that important and rather verbose
    logging:
      driver: none
    ports:
      - "27017:27017"
    networks:
      - mojaloop-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  quoting-service:
    image: "mojaloop/quoting-service:v10.1.0"
    container_name: quoting-service
    networks:
      - mojaloop-net
    depends_on:
      - mysql
      - central-ledger
    ports:
      - "3002:3002"
    volumes:
      - ./docker/quoting-service/default.json:/opt/quoting-service/config/default.json
    healthcheck:
      test: wget -q http://localhost:3002/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root

  ml-api-adapter:
    image: mojaloop/ml-api-adapter:v11.1.6
    container_name: ml-api-adapter
    command: sh -c "/opt/ml-api-adapter/wait4/wait4.js ml-api-adapter && node src/api/index.js"
    ports:
      - "3000:3000"
    volumes:
      - ./docker/ml-api-adapter/default.json:/opt/ml-api-adapter/config/default.json
      - ./docker/wait4:/opt/ml-api-adapter/wait4
    environment:
      - LOG_LEVEL=info
    networks:
      - mojaloop-net
    depends_on:
      - kafka
      - central-ledger
      - account-lookup-service
    healthcheck:
      test: wget -q http://localhost:3000/health -O /dev/null || exit 1
      timeout: 30s
      retries: 30
      interval: 30s
      start_period: 30s

  mysql:
    image: mysql/mysql-server
    container_name: mysql
    ports:
      - "3307:3306"
    volumes:
      # Note: this fixes the permissions issue, but docker-compose up will fail on first attempt
      - ./docker/sql-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_USER=${DBUSER:-central_ledger}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-central_ledger}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  simulator:
    image: mojaloop/simulator:v9.5.0
    container_name: simulator
    ports:
      - "8444:8444"
    environment:
      - LOG_LEVEL=info
      - TRANSFERS_ENDPOINT=http://ml-api-adapter:3000
      - QUOTES_ENDPOINT=http://quoting-service:3002
      - PARTIES_ENDPOINT=http://account-lookup-service:4002
      - TRANSACTION_REQUESTS_ENDPOINT=http://transaction-request-service:4003
      - TRANSFERS_FULFIL_RESPONSE_DISABLED=false
    networks:
      - mojaloop-net
    healthcheck:
      test: wget -q http://localhost:8444/health -O /dev/null || exit 1
      timeout: 20s
      retries: 10
      interval: 30s

  transaction-requests-service:
    image: mojaloop/transaction-requests-service:v11.1.3.0-pisp

    container_name: transaction-requests-service
    ports:
      - "4003:4003"
    volumes:
      - ./docker/transaction-requests-service/default.json:/opt/transaction-requests-service/config/default.json
    networks:
      - mojaloop-net
    depends_on:
      - account-lookup-service
    healthcheck:
      test: wget -q http://localhost:4003/health -O /dev/null || exit 1
      timeout: 20s
      retries: 10
      interval: 30s

  kafka:
    image: johnnypark/kafka-zookeeper:2.3.0
    container_name: kafka
    volumes:
      - ./docker/kafka/:/opt/kafka_2.12-2.3.0/config/
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      - ZOO_LOG4J_PROP=WARN
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD" ,"/opt/kafka_2.12-2.3.0/bin/kafka-broker-api-versions.sh","--bootstrap-server","kafka:29092"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  central-settlement:
    image: mojaloop/central-settlement:v10.5.0
    container_name: central-settlement
    command: sh -c "/opt/central-settlement/wait4/wait4.js central-settlement && node src/api/index.js"
    networks:
      - mojaloop-net
    depends_on:
      - mysql
      - kafka
    ports:
      - "3007:3007"
    volumes:
       - ./docker/central-settlement/default.json:/opt/central-settlement/config/default.json
       - ./docker/wait4:/opt/central-settlement/wait4

  account-lookup-service:
    image: mojaloop/account-lookup-service:v11.3.2
    container_name: account-lookup-service
    command: sh -c "/opt/account-lookup-service/wait4/wait4.js account-lookup-service && npm run migrate && node src/index.js server"
    ports:
      - "4001:4001"
      - "4002:4002"
    environment:
      - LOG_LEVEL=debug
      - ALS_DISPLAY_ROUTES=false
    networks:
      - mojaloop-net
    depends_on:
      - mysql-als
      - central-ledger
    volumes:
      - ./docker/account-lookup-service/default.json:/opt/account-lookup-service/config/default.json
      - ./docker/wait4:/opt/account-lookup-service/wait4
    healthcheck:
      test: wget -q http://localhost:4001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s
    user: root

  mysql-als:
    image: mysql/mysql-server
    container_name: mysql-als
    ports:
      - "3306:3306"
    volumes:
      - ./docker/sql-als-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_USER=${DBUSER:-account_lookup}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-account_lookup}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql-als"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  als-consent-oracle:
    container_name: als-consent-oracle
    image: "mojaloop/als-consent-oracle:v0.0.6"
    command: sh -c "/opt/als-consent-oracle/wait4/wait4.js als-consent-oracle && npm run migrate && npm run start"
    ports:
      - "16000:3000"
    networks:
      - mojaloop-net
    depends_on:
      - als-consent-oracle-mysql
    volumes:
       - ./docker/wait4:/opt/als-consent-oracle/wait4
       - ./docker/als-consent-oracle/default.json:/opt/als-consent-oracle/config/default.json
    healthcheck:
      test: wget -q http://localhost:3000/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      start_period: 30s
      interval: 15s

  als-consent-oracle-mysql:
    image: mysql/mysql-server
    container_name: als-consent-oracle-mysql
    ports:
      - "16006:3306"
    environment:
      - NODE_ENV=development
      - MYSQL_USER=${DBUSER:-als-consent-oracle}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-als-consent-oracle}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    volumes:
      - ./docker/sql-consent-oracle-init/:/docker-entrypoint-initdb.d/
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "als-consent-oracle-mysql"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  auth-service:
    image: mojaloop/auth-service:v11.10.0
    # build:
    #  context: /home/lew/developer/mojaloop/auth-service
    #  dockerfile: ./Dockerfile
    command: sh -c "/opt/auth-service/wait4/wait4.js auth-service && npm run migrate && npm run start"
    container_name: auth-service
    ports:
      - "26050:4004"
    networks:
      - mojaloop-net
    depends_on:
      - auth-service-mysql
      - auth-service-redis
    volumes:
      - ./docker/wait4:/opt/auth-service/wait4
      - ./docker/auth-service/default.json:/opt/auth-service/config/integration.json
    environment:
      - NODE_ENV=integration
      - LOG_LEVEL=debug
    healthcheck:
      test: wget -q http://localhost:4004/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s

  auth-service-mysql:
    image: mysql/mysql-server
    container_name: auth-service-mysql
    ports:
      - "3308:3306"
    volumes:
      - ./docker/sql-auth-service-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_USER=${DBUSER:-auth-service}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-auth-service}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  auth-service-redis:
    container_name: auth-service-redis
    image: "redis:6.2.4-alpine"
    networks:
      - mojaloop-net
    restart: always

  thirdparty-api-svc:
    image: "mojaloop/thirdparty-api-svc:v11.21.0"
    # build:
    #  context: https://github.com/mojaloop/thirdparty-api-svc.git#chore/branch
    #  dockerfile: ./Dockerfile
    container_name: thirdparty-api-svc
    command: sh -c "/opt/thirdparty-api-svc/wait4/wait4.js thirdparty-api-svc && npm run start"
    ports:
      - "12000:3008"
    volumes:
       - ./docker/thirdparty-api-svc/default.json:/opt/thirdparty-api-svc/config/default.json
       - ./docker/wait4:/opt/thirdparty-api-svc/wait4
    networks:
      - mojaloop-net
    depends_on:
      - kafka
      - account-lookup-service
      - central-ledger
    healthcheck:
      test: wget -q http://localhost:3008/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s

  ## DFSP A
  dfspa-backend:
    image: "mojaloop/mojaloop-simulator:v11.3.0.10-pisp"
    # build:
    #   context: ../../mojaloop-simulator
    #   dockerfile: ./Dockerfile
    container_name: dfspa-backend
    env_file: ./dfsp_a/dfsp_a_backend.env
    volumes:
       - ./dfsp_a/rules.json:/src/rules.json
    ports:
      - "9000:3000"
      - "9002:3002"
      - "9003:3003"
    networks:
      - mojaloop-net

  dfspa-sdk-scheme-adapter:
    image: "mojaloop/sdk-scheme-adapter:v11.16.2"
    # build:
    #   context: ../../sdk-scheme-adapter
    #   dockerfile: ./Dockerfile
    container_name: dfspa-sdk-scheme-adapter
    env_file: ./dfsp_a/dfsp_a_scheme_adapter.env
    volumes:
      - "./dfsp_a/secrets:/secrets"
      - "./dfsp_a/jwsVerificationKeys:/jwsVerificationKeys"
    ports:
      - "5000:4000"
      - "5002:4001"
    networks:
      - mojaloop-net
    depends_on:
      - dfspa-redis
      - dfspa-backend
      - ml-api-adapter
    restart: always

  dfspa-thirdparty-scheme-adapter-inbound:
    image: "mojaloop/thirdparty-scheme-adapter:v11.55.0"
    # build:
    #  context: https://github.com/mojaloop/thirdparty-scheme-adapter.git#feat/deterministic-test-consentids
    #  dockerfile: ./docker/Dockerfile
    container_name: dfspa-thirdparty-scheme-adapter-inbound
    environment:
      - NODE_ENV=e2e
      - LOG_LEVEL=debug
    command: sh -c "/opt/thirdparty-scheme-adapter/wait4/wait4.js dfspa-thirdparty-scheme-adapter && npm run start:inbound"
    volumes:
      - "./dfsp_a/secrets:/opt/thirdparty-scheme-adapter/secrets"
      - "./dfsp_a/dfsp_a_thirdparty_scheme_adapter.json:/opt/thirdparty-scheme-adapter/config/e2e.json"
      - "./docker/wait4:/opt/thirdparty-scheme-adapter/wait4"
    ports:
      - "5005:4005"
    networks:
      - mojaloop-net
    depends_on:
      - dfspa-redis
      - dfspa-sdk-scheme-adapter
      - thirdparty-api-svc
    restart: always
    healthcheck:
      test: wget -q http://localhost:4005/health -O /dev/null || exit 1
      timeout: 3s
      retries: 10
      start_period: 30s
      interval: 30s

  dfspa-thirdparty-scheme-adapter-outbound:
    image: "mojaloop/thirdparty-scheme-adapter:v11.55.0"
    # build:
    #  context: https://github.com/mojaloop/thirdparty-scheme-adapter.git#feat/deterministic-test-consentids
    #  dockerfile: ./docker/Dockerfile
    container_name: dfspa-thirdparty-scheme-adapter-outbound
    environment:
      - NODE_ENV=e2e
    command: sh -c "/opt/thirdparty-scheme-adapter/wait4/wait4.js dfspa-thirdparty-scheme-adapter && npm run start:outbound"
    volumes:
      - "./dfsp_a/secrets:/opt/thirdparty-scheme-adapter/secrets"
      - "./dfsp_a/dfsp_a_thirdparty_scheme_adapter.json:/opt/thirdparty-scheme-adapter/config/e2e.json"
      - "./docker/wait4:/opt/thirdparty-scheme-adapter/wait4"
    ports:
      - "5006:4006"
    networks:
      - mojaloop-net
    depends_on:
      - dfspa-redis
      - dfspa-sdk-scheme-adapter
      - thirdparty-api-svc
    restart: always
    healthcheck:
      test: wget -q http://localhost:4006/health -O /dev/null || exit 1
      timeout: 3s
      retries: 10
      start_period: 10s
      interval: 30s

  dfspa-redis:
    container_name: dfspa-redis
    image: "redis:5.0.4-alpine"
    networks:
      - mojaloop-net
    restart: always

  ## DFSP B
  dfspb-backend:
    image: "mojaloop/mojaloop-simulator:v11.3.0.8-pisp"
    container_name: dfspb-backend
    env_file: ./dfsp_b/dfsp_b_backend.env
    volumes:
       - ./dfsp_b/rules.json:/src/rules.json
    ports:
      - "10000:3000"
      - "10002:3002"
      - "10003:3003"
    networks:
      - mojaloop-net

  dfspb-sdk-scheme-adapter:
    image: "mojaloop/sdk-scheme-adapter:v11.10.1.3-pisp"
    # build:
    #   context: ../../sdk-scheme-adapter
    #   dockerfile: ./Dockerfile
    container_name: dfspb-sdk-scheme-adapter
    env_file: ./dfsp_b/dfsp_b_scheme_adapter.env
    volumes:
      - "./dfsp_b/secrets:/secrets"
      - "./dfsp_b/jwsVerificationKeys:/jwsVerificationKeys"
    ports:
      - "6000:4000"
      - "6002:4001"
    networks:
      - mojaloop-net
    depends_on:
      - dfspb-redis
      - dfspb-backend
      - ml-api-adapter
    restart: always

  dfspb-thirdparty-scheme-adapter-inbound:
    image: "mojaloop/thirdparty-scheme-adapter:v11.41.0"
    #build:
    #  context: https://github.com/username/thirdparty-scheme-adapter.git#feat/branch
    #  dockerfile: ./docker/Dockerfile
    container_name: dfspb-thirdparty-scheme-adapter-inbound
    environment:
      - NODE_ENV=e2e
    command: sh -c "/opt/thirdparty-scheme-adapter/wait4/wait4.js dfspb-thirdparty-scheme-adapter && npm run start:inbound"
    volumes:
      - "./dfsp_b/secrets:/opt/thirdparty-scheme-adapter/secrets"
      - "./dfsp_b/dfsp_b_thirdparty_scheme_adapter.json:/opt/thirdparty-scheme-adapter/config/e2e.json"
      - "./docker/wait4:/opt/thirdparty-scheme-adapter/wait4"
    ports:
      - "6005:4005"
    networks:
      - mojaloop-net
    depends_on:
      - dfspb-redis
      - dfspb-sdk-scheme-adapter
      - thirdparty-api-svc
    restart: always
    healthcheck:
      test: wget -q http://localhost:4005/health -O /dev/null || exit 1
      timeout: 3s
      retries: 10
      start_period: 10s
      interval: 30s

  dfspb-thirdparty-scheme-adapter-outbound:
    image: "mojaloop/thirdparty-scheme-adapter:v11.41.0"
    #build:
    #  context: https://github.com/username/thirdparty-scheme-adapter.git#feat/branch
    #  dockerfile: ./docker/Dockerfile
    container_name: dfspb-thirdparty-scheme-adapter-outbound
    environment:
      - NODE_ENV=e2e
    command: sh -c "/opt/thirdparty-scheme-adapter/wait4/wait4.js dfspb-thirdparty-scheme-adapter && npm run start:outbound"
    volumes:
      - "./dfsp_b/secrets:/opt/thirdparty-scheme-adapter/secrets"
      - "./dfsp_b/dfsp_b_thirdparty_scheme_adapter.json:/opt/thirdparty-scheme-adapter/config/e2e.json"
      - "./docker/wait4:/opt/thirdparty-scheme-adapter/wait4"
    ports:
      - "6006:4006"
    networks:
      - mojaloop-net
    depends_on:
      - dfspb-redis
      - dfspb-sdk-scheme-adapter
      - thirdparty-api-svc
    restart: always
    healthcheck:
      test: wget -q http://localhost:4006/health -O /dev/null || exit 1
      timeout: 3s
      retries: 10
      start_period: 10s
      interval: 30s

  dfspb-redis:
    container_name: dfspb-redis
    image: "redis:5.0.4-alpine"
    networks:
      - mojaloop-net
    restart: always

  ## PISP
  pisp-backend:
    image: "mojaloop/mojaloop-simulator:v11.3.0.8-pisp"
    container_name: pisp-backend
    env_file: ./pisp/pisp_backend.env
    volumes:
       - ./pisp/pisp_rules.json:/src/rules.json
    ports:
      - "11000:3000"
      - "11002:3002"
      - "11003:3003"

  pisp-sdk-scheme-adapter:
    image: "mojaloop/sdk-scheme-adapter:v11.10.1.3-pisp"
    # build:
    #   context: ../../sdk-scheme-adapter
    #   dockerfile: ./Dockerfile
    container_name: pisp-sdk-scheme-adapter
    env_file: ./pisp/pisp_scheme_adapter.env
    volumes:
      - "./pisp/secrets:/secrets"
      - "./pisp/jwsVerificationKeys:/jwsVerificationKeys"
    ports:
      - "7000:4000"
      - "7002:4001"
    networks:
      - mojaloop-net
    depends_on:
      - pisp-redis
      - pisp-backend
      - ml-api-adapter
    restart: always

  pisp-thirdparty-scheme-adapter-inbound:
    image: "mojaloop/thirdparty-scheme-adapter:v11.54.0"
    #build:
    #  context: https://github.com/username/thirdparty-scheme-adapter.git#feat/branch
    #  dockerfile: ./docker/Dockerfile
    container_name: pisp-thirdparty-scheme-adapter-inbound
    environment:
      - NODE_ENV=e2e
      - DFSP_ID=pisp
    command: sh -c "/opt/thirdparty-scheme-adapter/wait4/wait4.js pisp-thirdparty-scheme-adapter && npm run start:inbound"
    volumes:
      - "./pisp/secrets:/opt/thirdparty-scheme-adapter/secrets"
      - "./pisp/pisp_thirdparty_scheme_adapter.json:/opt/thirdparty-scheme-adapter/config/e2e.json"
      - "./docker/wait4:/opt/thirdparty-scheme-adapter/wait4"
    ports:
      - "7005:4005"
    networks:
      - mojaloop-net
    depends_on:
      - pisp-redis
      - pisp-sdk-scheme-adapter
      - thirdparty-api-svc
    restart: always
    healthcheck:
      test: wget -q http://localhost:4005/health -O /dev/null || exit 1
      timeout: 3s
      retries: 10
      start_period: 10s
      interval: 30s

  pisp-thirdparty-scheme-adapter-outbound:
    image: "mojaloop/thirdparty-scheme-adapter:v11.54.0"
    #build:
    #  context: https://github.com/username/thirdparty-scheme-adapter.git#feat/branch
    #  dockerfile: ./docker/Dockerfile
    container_name: pisp-thirdparty-scheme-adapter-outbound
    environment:
      - NODE_ENV=e2e
      - DFSP_ID=pisp
      - LOG_LEVEL=debug
    command: sh -c "/opt/thirdparty-scheme-adapter/wait4/wait4.js pisp-thirdparty-scheme-adapter && npm run start:outbound"
    volumes:
      - "./pisp/secrets:/opt/thirdparty-scheme-adapter/secrets"
      - "./pisp/pisp_thirdparty_scheme_adapter.json:/opt/thirdparty-scheme-adapter/config/e2e.json"
      - "./docker/wait4:/opt/thirdparty-scheme-adapter/wait4"
    ports:
      - "7006:4006"
    networks:
      - mojaloop-net
    depends_on:
      - pisp-redis
      - pisp-sdk-scheme-adapter
      - thirdparty-api-svc
    restart: always
    healthcheck:
      test: wget -q http://localhost:4006/health -O /dev/null || exit 1
      timeout: 3s
      retries: 10
      start_period: 10s
      interval: 30s

  pisp-redis:
    container_name: pisp-redis
    image: "redis:5.0.4-alpine"
    networks:
      - mojaloop-net
    restart: always

  ## OTP and Web Flow Simulator - using TTK for now
  login-flow-simulator:
    image: mojaloop/ml-testing-toolkit:v11.8.1
    container_name: login-flow-simulator
    volumes:
      - "./ml-testing-toolkit/spec_files:/opt/mojaloop-testing-toolkit/spec_files"
      - "./ml-testing-toolkit/secrets:/opt/mojaloop-testing-toolkit/secrets"
    ports:
      - "15000:5000"
      - "5050:5050"
    environment:
      - AUTH_ENABLED=FALSE
    command: npm start
    depends_on:
      - login-flow-simulator-mongo
    networks:
      - mojaloop-net

  login-flow-simulator-mongo:
    image: mongo

  login-flow-simulator-ui:
    image: mojaloop/ml-testing-toolkit-ui:v11.8.4.2-pisp
    container_name: login-flow-simulator-ui
    ports:
      - "6060:6060"
    environment:
      - API_BASE_URL=http:/localhost:5050
      - AUTH_ENABLED=FALSE
      - TP_SIM_URL=http://localhost:15000
    command:
      - sh
      - /usr/share/nginx/start.sh
    networks:
      - mojaloop-net
