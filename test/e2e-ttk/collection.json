{
  "name": "multi",
  "test_cases": [
    {
      "id": 1,
      "name": "Account Linking: Prelinking",
      "requests": [
        {
          "id": 1,
          "description": "GET /linking/providers",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/providers",
          "path": "/linking/providers",
          "method": "get",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response state",
                "exec": [
                  "const expected = {",
                  "    currentState: 'providersLookupSuccess',",
                  "    providers: ['dfspa', 'dfspb']",
                  "  }",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          },
          "url": "http://pisp-thirdparty-sdk:4006"
        }
      ]
    },
    {
      "id": 2,
      "name": "Account Linking: Discovery",
      "requests": [
        {
          "id": 1,
          "description": "GET /linking/accounts/{fspId}/{userId}",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/accounts/{fspId}/{userId}",
          "path": "/linking/accounts/dfspa/username1234",
          "method": "get",
          "params": {
            "fspId": "dfspa",
            "userId": "username1234"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "expected response",
                "exec": [
                  "const expected = {",
                  "  accounts: [",
                  "    {",
                  "      accountNickname: 'dfspa.user.nickname1',",
                  "      address: 'dfspa.username.1234',",
                  "      currency: 'ZAR'",
                  "    },",
                  "    {",
                  "      accountNickname: 'dfspa.user.nickname2',",
                  "      address: 'dfspa.username.5678',",
                  "      currency: 'USD'",
                  "    }",
                  "],",
                  "  currentState: 'COMPLETED'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3,
      "name": "Account Linking - Happy Path WEB",
      "requests": [
        {
          "id": 1,
          "description": "POST /linking/request-consent",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent",
          "path": "/linking/request-consent",
          "method": "post",
          "body": {
            "toParticipantId": "dfspa",
            "userId": "dfspa.username",
            "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
            "authChannels": [
              "WEB",
              "OTP"
            ],
            "accounts": [
              { "accountNickname": "XXXXXXnt", "address": "dfspa.username.1234", "currency": "ZAR" },
              { "accountNickname": "SpeXXXXXXXXnt", "address": "dfspa.username.5678", "currency": "USD" }
            ],
            "actions": ["ACCOUNTS_GET_BALANCE", "ACCOUNTS_TRANSFER"],
            "callbackUri": "pisp-app://callback.com"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "  channelResponse: {",
                  "  scopes: [",
                  "  {",
                  "    address: 'dfspa.username.1234',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  },",
                  "  {",
                  "    address: 'dfspa.username.5678',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  }",
                  "  ],",
                  "  callbackUri: 'pisp-app://callback.com',",
                  "  authChannels: ['WEB'],",
                  "  authUri: 'http://localhost:6060/admin/dfsp/authorize?consentRequestId=b51ec534-ee48-4575-b6a9-ead2955b8069&callbackUri=http://localhost:42181/flutter-web-auth.html'",
                  "  },",
                  "  currentState: 'WebAuthenticationChannelResponseReceived'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "PATCH /linking/request-consent/{ID}/authenticate",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/authenticate",
          "path": "/linking/request-consent/b51ec534-ee48-4575-b6a9-ead2955b8069/authenticate",
          "method": "patch",
          "params": {
            "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "body": {
            "authToken": "123456"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expectedScopes =  [",
                  "  {",
                  "    address: 'dfspa.username.1234',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  },",
                  "  {",
                  "    address: 'dfspa.username.5678',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  }]",
                  "",
                  "",
                  "expect(response.body.consent.consentId).to.be.a('string')",
                  "expect(response.body.consent.consentRequestId).to.equal('b51ec534-ee48-4575-b6a9-ead2955b8069')",
                  "expect(response.body.consent.scopes).to.deep.equal(expectedScopes)",
                  "expect(response.body.currentState).to.equal('consentReceivedAwaitingCredential')"
                ]
              }
            ]
          },
          "url": "http://pisp-thirdparty-sdk:4006"
        },
        {
          "id": 3,
          "description": "POST //linking/request-consent/{ID}/pass-credential",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/pass-credential",
          "path": "/linking/request-consent/b51ec534-ee48-4575-b6a9-ead2955b8069/pass-credential",
          "method": "post",
          "params": {
            "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "body": {
            "credential": {
              "payload": {
                "id": "HskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAtw",
                "rawId": "HskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAtw==",
                "response": {
                  "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiWXpSaFpHRmlZak16WlRrek1EWmlNRE00TURnNE1UTXlZV1ptWTJSbE5UVTJZelV3WkRneVpqWXdNMlkwTnpjeE1XRTVOVEV3WW1ZelltVmxaalprTmciLCJvcmlnaW4iOiJodHRwOi8vbG9jYWxob3N0OjQyMTgxIiwiY3Jvc3NPcmlnaW4iOmZhbHNlfQ==",
                  "attestationObject": "o2NmbXRmcGFja2VkZ2F0dFN0bXSjY2FsZyZjc2lnWEcwRQIhAN2JDPPTse/45EHSqSpEJiiok5sns+HqdJch3+gsL09VAiAh7W7ZhQC8gMIkgwcA+S4rQkaHoHnP9AkkohaKCuuA62N4NWOBWQLBMIICvTCCAaWgAwIBAgIECwXNUzANBgkqhkiG9w0BAQsFADAuMSwwKgYDVQQDEyNZdWJpY28gVTJGIFJvb3QgQ0EgU2VyaWFsIDQ1NzIwMDYzMTAgFw0xNDA4MDEwMDAwMDBaGA8yMDUwMDkwNDAwMDAwMFowbjELMAkGA1UEBhMCU0UxEjAQBgNVBAoMCVl1YmljbyBBQjEiMCAGA1UECwwZQXV0aGVudGljYXRvciBBdHRlc3RhdGlvbjEnMCUGA1UEAwweWXViaWNvIFUyRiBFRSBTZXJpYWwgMTg0OTI5NjE5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIRpvsbWJJcsKwRhffCrjqLSIEBR5sR7/9VXgfZdRvSsXaiUt7lns44WZIFuz6ii/j9f8fadcBUJyrkhY5ZH8WqNsMGowIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjEwEwYLKwYBBAGC5RwCAQEEBAMCBDAwIQYLKwYBBAGC5RwBAQQEEgQQFJogIY72QTOWuIH41bfx9TAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQA+/qPfPSrgclePfgTQ3VpLaNsBr+hjLhi04LhzQxiRGWwYS+vB1TOiPXeLsQQIwbmqQU51doVbCTaXGLNIr1zvbLAwhnLWH7i9m4ahCqaCzowtTvCQ7VBUGP5T1M4eYnoo83IDCVjQj/pZG8QYgOGOigztGoWAf5CWcUF6C0UyFbONwUcqJEl2QLToa/7E8VRjm4W46IAUljYkODVZASv8h3wLROx9p5TSBlSymtwdulxQe/DKbfNSvM3edA0up+EIJKLOOU+QTR2ZQV46fEW1/ih6m8vcaY6L3NW0eYpc7TXeijUJAgoUtya/vzmnRAecuY9bncoJt8PrvL2ir2kDaGF1dGhEYXRhWMRJlg3liA6MaHQ0Fw9kdmBbj+SuuaKGMseZXPO6gx2XY0EAAAAEFJogIY72QTOWuIH41bfx9QBAHskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAt6UBAgMmIAEhWCBYz+SV6fSy7ZjFzdj+SWxaMbfaw4ZT+wYgClN3v93kVSJYIGSzY41DNLrh1jXp4J53qCnq4+b9HYXud/0UEsZquDeV"
                },
                "type": "public-key"
              }
            }
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "    credential: {",
                  "      status: 'VERIFIED'",
                  "    },",
                  "    currentState: 'accountsLinked'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 4,
      "name": "Account Linking - Happy Path OTP",
      "requests": [
        {
          "id": 1,
          "description": "POST /linking/request-consent",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent",
          "path": "/linking/request-consent",
          "method": "post",
          "body": {
            "toParticipantId": "dfspa",
            "userId": "dfspa.username",
            "consentRequestId": "c51ec534-ee48-4575-b6a9-ead2955b8069",
            "authChannels": [
              "WEB",
              "OTP"
            ],
            "accounts": [
              { "accountNickname": "XXXXXXnt", "address": "dfspa.username.1234", "currency": "ZAR" },
              { "accountNickname": "SpeXXXXXXXXnt", "address": "dfspa.username.5678", "currency": "USD" }
            ],
            "actions": ["ACCOUNTS_GET_BALANCE", "ACCOUNTS_TRANSFER"],
            "callbackUri": "pisp-app://callback.com"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "channelResponse: {",
                  "  scopes: [",
                  "  {",
                  "    address: 'dfspa.username.1234',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  },",
                  "  {",
                  "    address: 'dfspa.username.5678',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  }",
                  "  ],",
                  "callbackUri: 'pisp-app://callback.com',",
                  "authChannels: ['OTP'],",
                  "},",
                  "currentState: 'OTPAuthenticationChannelResponseReceived'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "PATCH /linking/request-consent/{ID}/authenticate",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/authenticate",
          "path": "/linking/request-consent/c51ec534-ee48-4575-b6a9-ead2955b8069/authenticate",
          "method": "patch",
          "params": {
            "ID": "c51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "body": {
            "authToken": "123456"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expectedScopes =  [",
                  "  {",
                  "    address: 'dfspa.username.1234',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  },",
                  "  {",
                  "    address: 'dfspa.username.5678',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  }]",
                  "",
                  "",
                  "expect(response.body.consent.consentId).to.be.a('string')",
                  "expect(response.body.consent.consentRequestId).to.equal('c51ec534-ee48-4575-b6a9-ead2955b8069')",
                  "expect(response.body.consent.scopes).to.deep.equal(expectedScopes)",
                  "expect(response.body.currentState).to.equal('consentReceivedAwaitingCredential')"
                ]
              }
            ]
          },
          "url": "http://pisp-thirdparty-sdk:4006"
        },
        {
          "id": 3,
          "description": "POST //linking/request-consent/{ID}/pass-credential",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/pass-credential",
          "path": "/linking/request-consent/c51ec534-ee48-4575-b6a9-ead2955b8069/pass-credential",
          "method": "post",
          "params": {
            "ID": "c51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "body": {
            "credential": {
              "payload": {
                "id": "zMEeRCOGrJU53n-MWfZFtdQkkknJCLn_nIRD6TIO9uO4Mgd9WEefoII3ZBhfGiWQRYkqP_UAY4GxYiUT_0OZbA",
                "rawId": "zMEeRCOGrJU53n+MWfZFtdQkkknJCLn/nIRD6TIO9uO4Mgd9WEefoII3ZBhfGiWQRYkqP/UAY4GxYiUT/0OZbA==",
                "response": {
                  "attestationObject": "o2NmbXRoZmlkby11MmZnYXR0U3RtdKJjc2lnWEcwRQIgK5O/5iZlFuvThVhjj9DWRmImAk2fTJz3ecP1KyrDCKgCIQC1REKU+64f6o51HEAZxp2weSGMkmWte3kjcYKnFPOIy2N4NWOBWQLcMIIC2DCCAcCgAwIBAgIJALA5KjdfOKLrMA0GCSqGSIb3DQEBCwUAMC4xLDAqBgNVBAMTI1l1YmljbyBVMkYgUm9vdCBDQSBTZXJpYWwgNDU3MjAwNjMxMCAXDTE0MDgwMTAwMDAwMFoYDzIwNTAwOTA0MDAwMDAwWjBuMQswCQYDVQQGEwJTRTESMBAGA1UECgwJWXViaWNvIEFCMSIwIAYDVQQLDBlBdXRoZW50aWNhdG9yIEF0dGVzdGF0aW9uMScwJQYDVQQDDB5ZdWJpY28gVTJGIEVFIFNlcmlhbCA5MjU1MTQxNjAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATBUzDbxw7VyKPri/NcB5oy/eVWBkwkXfQNU1gLc+nLR5EP7xcV93l5aHDpq1wXjOuZA5jBJoWpb6nbhhWOI9nCo4GBMH8wEwYKKwYBBAGCxAoNAQQFBAMFBAMwIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjcwEwYLKwYBBAGC5RwCAQEEBAMCBDAwIQYLKwYBBAGC5RwBAQQEEgQQL8BXn4ETR+qxFrtajbkgKjAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQABaTFk5Jj2iKM7SQ+rIS9YLEj4xxyJlJ9fGOoidDllzj4z7UpdC2JQ+ucOBPY81JO6hJTwcEkIdwoQPRZO5ZAScmBDNuIizJxqiQct7vF4J6SJHwEexWpF4XztIHtWEmd8JbnlvMw1lMwx+UuD06l11LxkfhK/LN613S91FABcf/ViH6rqmSpHu+II26jWeYEltk0Wf7jvOtRFKkROFBl2WPc2Dg1eRRYOKSJMqQhQn2Bud83uPFxT1H5yT29MKtjy6DJyzP4/UQjhLmuy9NDt+tlbtvfrXbrIitVMRE6oRert0juvM8PPMb6tvVYQfiM2IaYLKChn5yFCywvR9Xa+aGF1dGhEYXRhWMRJlg3liA6MaHQ0Fw9kdmBbj+SuuaKGMseZXPO6gx2XY0EAAAAAAAAAAAAAAAAAAAAAAAAAAABAzMEeRCOGrJU53n+MWfZFtdQkkknJCLn/nIRD6TIO9uO4Mgd9WEefoII3ZBhfGiWQRYkqP/UAY4GxYiUT/0OZbKUBAgMmIAEhWCD0T3++oAlCdCKgtoxjMuuiXbHMCmKvDo5BkVZgwRHKASJYIG3A5XS9CQ4XmFK7n+vmYo862BR94WSKJ+DpmgVnXNzd",
                  "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiWldRMFpUQXdZelUwWVRVME5XRTBOVFU1TXprMU1qazNPRGs1WVRSbU1UQTVZbU5rWlRCaU9ETTVaVGcxTjJJd1l6VXdNakJqTWpaa1pHVTFZMkZpWWciLCJvcmlnaW4iOiJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJjcm9zc09yaWdpbiI6ZmFsc2UsIm90aGVyX2tleXNfY2FuX2JlX2FkZGVkX2hlcmUiOiJkbyBub3QgY29tcGFyZSBjbGllbnREYXRhSlNPTiBhZ2FpbnN0IGEgdGVtcGxhdGUuIFNlZSBodHRwczovL2dvby5nbC95YWJQZXgifQ=="
                },
                "type": "public-key"
              }
            }
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "    credential: {",
                  "      status: 'VERIFIED'",
                  "    },",
                  "    currentState: 'accountsLinked'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 5,
      "name": "Account Linking - Error @ consent request stage",
      "requests": [
        {
          "id": 1,
          "description": "validateRequest should return an error",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent",
          "path": "/linking/request-consent",
          "method": "post",
          "body": {
            "toParticipantId": "dfspa",
            "userId": "dfspa.username",
            "consentRequestId": "d51ec534-ee48-4575-b6a9-ead2955b8069",
            "authChannels": [
              "WEB",
              "OTP"
            ],
            "accounts": [
              { "accountNickname": "XXXXXXnt", "address": "dfspa.username.1234", "currency": "ZAR" },
              { "accountNickname": "SpeXXXXXXXXnt", "address": "dfspa.username.5678", "currency": "USD" }
            ],
            "actions": ["ACCOUNTS_GET_BALANCE", "ACCOUNTS_TRANSFER"],
            "callbackUri": "pisp-app://callback.com"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response body",
                "exec": [
                  "const expected = {",
                  "  errorInformation: {",
                  "    errorCode: '7203',",
                  "    errorDescription: 'FSP does not support any requested authentication channels'",
                  "  },",
                  "  currentState: 'errored'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          },
          "url": "http://pisp-thirdparty-sdk:4006"
        }
      ]
    },
    {
      "id": 6,
      "name": "Account Linking - Error @ consent request authenticate stage",
      "requests": [
        {
          "id": 1,
          "description": "POST /linking/request-consent",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent",
          "path": "/linking/request-consent",
          "method": "post",
          "body": {
            "toParticipantId": "dfspa",
            "userId": "dfspa.username",
            "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
            "authChannels": [
              "WEB",
              "OTP"
            ],
            "accounts": [
              { "accountNickname": "XXXXXXnt", "address": "dfspa.username.1234", "currency": "ZAR" },
              { "accountNickname": "SpeXXXXXXXXnt", "address": "dfspa.username.5678", "currency": "USD" }
            ],
            "actions": ["ACCOUNTS_GET_BALANCE", "ACCOUNTS_TRANSFER"],
            "callbackUri": "pisp-app://callback.com"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "channelResponse: {",
                  "  scopes: [",
                  "  {",
                  "    address: 'dfspa.username.1234',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  },",
                  "  {",
                  "    address: 'dfspa.username.5678',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  }",
                  "  ],",
                  "callbackUri: 'pisp-app://callback.com',",
                  "authChannels: ['WEB'],",
                  "authUri: \"http://localhost:6060/admin/dfsp/authorize?consentRequestId=b51ec534-ee48-4575-b6a9-ead2955b8069&callbackUri=http://localhost:42181/flutter-web-auth.html\",",
                  "},",
                  "currentState: 'WebAuthenticationChannelResponseReceived'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "PATCH /linking/request-consent/{ID}/authenticate",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/authenticate",
          "path": "/linking/request-consent/b51ec534-ee48-4575-b6a9-ead2955b8069/authenticate",
          "method": "patch",
          "params": {
            "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "body": {
            "authToken": "654321"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "  errorInformation: {",
                  "    errorCode: '7205',",
                  "    errorDescription: 'OTP failed validation'",
                  "  },",
                  "  currentState: 'errored'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)",
                  ""
                ]
              }
            ]
          },
          "url": "http://pisp-thirdparty-sdk:4006"
        }
      ]
    },
    {
      "id": 7,
      "name": "Account Linking - Error @ consent request register credential stage",
      "requests": [
        {
          "id": 1,
          "description": "POST /linking/request-consent",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent",
          "path": "/linking/request-consent",
          "method": "post",
          "body": {
            "toParticipantId": "dfspa",
            "userId": "dfspa.username",
            "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
            "authChannels": [
              "WEB",
              "OTP"
            ],
            "accounts": [
              { "accountNickname": "XXXXXXnt", "address": "dfspa.username.1234", "currency": "ZAR" },
              { "accountNickname": "SpeXXXXXXXXnt", "address": "dfspa.username.5678", "currency": "USD" }
            ],
            "actions": ["ACCOUNTS_GET_BALANCE", "ACCOUNTS_TRANSFER"],
            "callbackUri": "pisp-app://callback.com"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "  channelResponse: {",
                  "  scopes: [",
                  "  {",
                  "    address: 'dfspa.username.1234',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  },",
                  "  {",
                  "    address: 'dfspa.username.5678',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  }",
                  "  ],",
                  "  callbackUri: 'pisp-app://callback.com',",
                  "  authChannels: ['WEB'],",
                  "  authUri: 'http://localhost:6060/admin/dfsp/authorize?consentRequestId=b51ec534-ee48-4575-b6a9-ead2955b8069&callbackUri=http://localhost:42181/flutter-web-auth.html'",
                  "  },",
                  "  currentState: 'WebAuthenticationChannelResponseReceived'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "PATCH /linking/request-consent/{ID}/authenticate",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/authenticate",
          "path": "/linking/request-consent/b51ec534-ee48-4575-b6a9-ead2955b8069/authenticate",
          "method": "patch",
          "params": {
            "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "body": {
            "authToken": "123456"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expectedScopes =  [",
                  "  {",
                  "    address: 'dfspa.username.1234',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  },",
                  "  {",
                  "    address: 'dfspa.username.5678',",
                  "    actions: [",
                  "      'ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'",
                  "    ]",
                  "  }]",
                  "",
                  "",
                  "expect(response.body.consent.consentId).to.be.a('string')",
                  "expect(response.body.consent.consentRequestId).to.equal('b51ec534-ee48-4575-b6a9-ead2955b8069')",
                  "expect(response.body.consent.scopes).to.deep.equal(expectedScopes)",
                  "expect(response.body.currentState).to.equal('consentReceivedAwaitingCredential')"
                ]
              }
            ]
          },
          "url": "http://pisp-thirdparty-sdk:4006"
        },
        {
          "id": 3,
          "description": "POST /linking/request-consent/{ID}/pass-credential",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/pass-credential",
          "path": "/linking/request-consent/b51ec534-ee48-4575-b6a9-ead2955b8069/pass-credential",
          "method": "post",
          "params": {
            "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "body": {
            "credential": {
              "payload": {
                "id": "DVFXZuLI5po4eDNPCH7Vtrjan5h+yGxeAUzS3QH3uMAP8O+7xg0AObz0mdTRy7veAflN201NlqoI+lByRug5ow==",
                "rawId": "DVFXZuLI5po4eDNPCH7Vtrjan5h+yGxeAUzS3QH3uMAP8O+7xg0AObz0mdTRy7veAflN201NlqoI+lByRug5ow==",
                "response": {
                  "clientDataJSON": "eyJjaGFsbGVuZ2UiOiJUMWRhYUZscVFYaGFWR04zV1dwVk5GbDZVbWhOZWxKdFQxZFJkMDU2UW0xYWFteHNXa1JHYVU1cVl6Sk9WMVpvVFhwQk1VNUhTVEZOVjFwcVdsUm9hbHBIUm1wT1JFVjVXa1JDYlU1dFRUSk5WMFpvVFZFIiwiY2xpZW50RXh0ZW5zaW9ucyI6e30sImhhc2hBbGdvcml0aG0iOiJTSEEtMjU2Iiwib3JpZ2luIjoiaHR0cHM6Ly9zYW5kYm94Lm1vamFsb29wLmlvIiwidHlwZSI6IndlYmF1dGhuLmdldCJ9",
                  "attestationObject": "o2NmbXRmcGFja2VkZ2F0dFN0bXSjY2FsZyZjc2lnWEcwRQIhAN2JDPPTse/45EHSqSpEJiiok5sns+HqdJch3+gsL09VAiAh7W7ZhQC8gMIkgwcA+S4rQkaHoHnP9AkkohaKCuuA62N4NWOBWQLBMIICvTCCAaWgAwIBAgIECwXNUzANBgkqhkiG9w0BAQsFADAuMSwwKgYDVQQDEyNZdWJpY28gVTJGIFJvb3QgQ0EgU2VyaWFsIDQ1NzIwMDYzMTAgFw0xNDA4MDEwMDAwMDBaGA8yMDUwMDkwNDAwMDAwMFowbjELMAkGA1UEBhMCU0UxEjAQBgNVBAoMCVl1YmljbyBBQjEiMCAGA1UECwwZQXV0aGVudGljYXRvciBBdHRlc3RhdGlvbjEnMCUGA1UEAwweWXViaWNvIFUyRiBFRSBTZXJpYWwgMTg0OTI5NjE5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIRpvsbWJJcsKwRhffCrjqLSIEBR5sR7/9VXgfZdRvSsXaiUt7lns44WZIFuz6ii/j9f8fadcBUJyrkhY5ZH8WqNsMGowIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjEwEwYLKwYBBAGC5RwCAQEEBAMCBDAwIQYLKwYBBAGC5RwBAQQEEgQQFJogIY72QTOWuIH41bfx9TAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQA+/qPfPSrgclePfgTQ3VpLaNsBr+hjLhi04LhzQxiRGWwYS+vB1TOiPXeLsQQIwbmqQU51doVbCTaXGLNIr1zvbLAwhnLWH7i9m4ahCqaCzowtTvCQ7VBUGP5T1M4eYnoo83IDCVjQj/pZG8QYgOGOigztGoWAf5CWcUF6C0UyFbONwUcqJEl2QLToa/7E8VRjm4W46IAUljYkODVZASv8h3wLROx9p5TSBlSymtwdulxQe/DKbfNSvM3edA0up+EIJKLOOU+QTR2ZQV46fEW1/ih6m8vcaY6L3NW0eYpc7TXeijUJAgoUtya/vzmnRAecuY9bncoJt8PrvL2ir2kDaGF1dGhEYXRhWMRJlg3liA6MaHQ0Fw9kdmBbj+SuuaKGMseZXPO6gx2XY0EAAAAEFJogIY72QTOWuIH41bfx9QBAHskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAt6UBAgMmIAEhWCBYz+SV6fSy7ZjFzdj+SWxaMbfaw4ZT+wYgClN3v93kVSJYIGSzY41DNLrh1jXp4J53qCnq4+b9HYXud/0UEsZquDeV"
                },
                "type": "public-key"
              }
            }
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "    errorInformation: {",
                  "      errorCode: '7213',",
                  "      errorDescription: 'Consent is invalid'",
                  "    },",
                  "    currentState: 'errored'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 8,
      "name": "Third Party Transaction Request - Happy Path",
      "requests": [
        {
          "id": 1,
          "description": "POST /linking/request-consent",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent",
          "path": "/linking/request-consent",
          "method": "post",
          "body": {
            "toParticipantId": "dfspa",
            "userId": "dfspa.username",
            "consentRequestId": "b5d6206c-4f06-497d-af15-ed866ea6958f",
            "authChannels": [
              "WEB",
              "OTP"
            ],
            "accounts": [
              {
                "accountNickname": "SpeXXXXXXXXnt",
                "address": "244431e2-7a56-40c6-814c-932631760fa9",
                "currency": "USD"
              },
              {
                "accountNickname": "SpeXXXXXXXXnt",
                "address": "6b6e6d77-dbf4-423f-abd5-bc5854e4ab1c",
                "currency": "USD"
              }
            ],
            "actions": ["ACCOUNTS_GET_BALANCE", "ACCOUNTS_TRANSFER"],
            "callbackUri": "pisp-app://callback.com"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "  channelResponse: {",
                  "    scopes: [",
                  "      {",
                  "      address: '244431e2-7a56-40c6-814c-932631760fa9',",
                  "        actions: ['ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'],",
                  "      },",
                  "      { ",
                  "        address: '6b6e6d77-dbf4-423f-abd5-bc5854e4ab1c',",
                  "        actions: ['ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER']",
                  "      }",
                  "    ],",
                  "    callbackUri: 'pisp-app://callback.com',",
                  "    authChannels: ['OTP'],",
                  "  },",
                  "  currentState: 'OTPAuthenticationChannelResponseReceived'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "PATCH /linking/request-consent/{ID}/authenticate",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/authenticate",
          "path": "/linking/request-consent/b5d6206c-4f06-497d-af15-ed866ea6958f/authenticate",
          "method": "patch",
          "params": {
            "ID": "b5d6206c-4f06-497d-af15-ed866ea6958f"
          },
          "body": {
            "authToken": "123456"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "  consent: {",
                  "    status: \"ISSUED\",",
                  "    // this is configured in dfspa's thirdparty-sdk",
                  "    consentId: \"2acf1dfa-ce45-486e-b19e-ae4ad9804a63\",",
                  "    consentRequestId: 'b5d6206c-4f06-497d-af15-ed866ea6958f',",
                  "    scopes: [",
                  "      { actions: ['ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'], address: '244431e2-7a56-40c6-814c-932631760fa9' },",
                  "      { actions: ['ACCOUNTS_GET_BALANCE', 'ACCOUNTS_TRANSFER'], address: '6b6e6d77-dbf4-423f-abd5-bc5854e4ab1c' }",
                  "    ]",
                  "",
                  "  },",
                  "  challenge: \"bb8030548a0f06ad0f105487528195df2110931324f4004389088e6cbdfeabb1\",",
                  "  currentState: 'consentReceivedAwaitingCredential'",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          },
          "url": "http://pisp-thirdparty-sdk:4006"
        },
        {
          "id": 3,
          "description": "POST /linking/request-consent/{ID}/pass-credential",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/linking/request-consent/{ID}/pass-credential",
          "path": "/linking/request-consent/b5d6206c-4f06-497d-af15-ed866ea6958f/pass-credential",
          "method": "post",
          "params": {
            "ID": "b5d6206c-4f06-497d-af15-ed866ea6958f"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "body": {
            "credential": {
              "payload": {
                "id": "nJGhvWOzo6-bc4OTIuT9UWPmUGrzLlKbZ0ONvLPwWOEzOUr45Mov4vRWwMOYIGkGF_UTIL3nkSEug3ChycAryA",
                "rawId": "nJGhvWOzo6+bc4OTIuT9UWPmUGrzLlKbZ0ONvLPwWOEzOUr45Mov4vRWwMOYIGkGF/UTIL3nkSEug3ChycAryA==",
                "response": {
                  "attestationObject": "o2NmbXRoZmlkby11MmZnYXR0U3RtdKJjc2lnWEYwRAIgUuRpqNZMN3IdUm4wiYfoD4eHS1fE8MBuC7SQWsp0q98CIF05dJl1nPud2BeFVqZS7fiDRaOIWdxYjn/f6SE2YWy7Y3g1Y4FZAtwwggLYMIIBwKADAgECAgkAsDkqN184ouswDQYJKoZIhvcNAQELBQAwLjEsMCoGA1UEAxMjWXViaWNvIFUyRiBSb290IENBIFNlcmlhbCA0NTcyMDA2MzEwIBcNMTQwODAxMDAwMDAwWhgPMjA1MDA5MDQwMDAwMDBaMG4xCzAJBgNVBAYTAlNFMRIwEAYDVQQKDAlZdWJpY28gQUIxIjAgBgNVBAsMGUF1dGhlbnRpY2F0b3IgQXR0ZXN0YXRpb24xJzAlBgNVBAMMHll1YmljbyBVMkYgRUUgU2VyaWFsIDkyNTUxNDE2MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMFTMNvHDtXIo+uL81wHmjL95VYGTCRd9A1TWAtz6ctHkQ/vFxX3eXlocOmrXBeM65kDmMEmhalvqduGFY4j2cKjgYEwfzATBgorBgEEAYLECg0BBAUEAwUEAzAiBgkrBgEEAYLECgIEFTEuMy42LjEuNC4xLjQxNDgyLjEuNzATBgsrBgEEAYLlHAIBAQQEAwIEMDAhBgsrBgEEAYLlHAEBBAQSBBAvwFefgRNH6rEWu1qNuSAqMAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggEBAAFpMWTkmPaIoztJD6shL1gsSPjHHImUn18Y6iJ0OWXOPjPtSl0LYlD65w4E9jzUk7qElPBwSQh3ChA9Fk7lkBJyYEM24iLMnGqJBy3u8XgnpIkfAR7FakXhfO0ge1YSZ3wlueW8zDWUzDH5S4PTqXXUvGR+Er8s3rXdL3UUAFx/9WIfquqZKke74gjbqNZ5gSW2TRZ/uO861EUqRE4UGXZY9zYODV5FFg4pIkypCFCfYG53ze48XFPUfnJPb0wq2PLoMnLM/j9RCOEua7L00O362Vu29+tdusiK1UxETqhF6u3SO68zw88xvq29VhB+IzYhpgsoKGfnIULLC9H1dr5oYXV0aERhdGFYxEmWDeWIDoxodDQXD2R2YFuP5K65ooYyx5lc87qDHZdjQQAAAAAAAAAAAAAAAAAAAAAAAAAAAECckaG9Y7Ojr5tzg5Mi5P1RY+ZQavMuUptnQ428s/BY4TM5Svjkyi/i9FbAw5ggaQYX9RMgveeRIS6DcKHJwCvIpQECAyYgASFYIEqdwNFG63wL5iYN7dGCJsWs9ebN809I2MSJMhVTGqrgIlggSHmkRWVb/cQWepnVvjeYHg9CtDsY3rRQdI8crM1TDRI=",
                  "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiWW1JNE1ETXdOVFE0WVRCbU1EWmhaREJtTVRBMU5EZzNOVEk0TVRrMVpHWXlNVEV3T1RNeE16STBaalF3TURRek9Ea3dPRGhsTm1OaVpHWmxZV0ppTVEiLCJvcmlnaW4iOiJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJjcm9zc09yaWdpbiI6ZmFsc2V9"
                },
                "type": "public-key"
              }
            }
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "        credential: {",
                  "          status: 'VERIFIED'",
                  "        },",
                  "        currentState: 'accountsLinked'",
                  "      }",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        },
        {
          "id": 4,
          "description": "party lookup",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/thirdpartyTransaction/partyLookup",
          "path": "/thirdpartyTransaction/partyLookup",
          "method": "post",
          "body": {
            "payee": {
              "partyIdType": "MSISDN",
              "partyIdentifier": "987654321"
            },
            "transactionRequestId": "c2470148-1be2-4c0b-aece-aa8dcb92a6cc"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "const expected = {",
                  "  \"party\": {",
                  "    \"partyIdInfo\": {",
                  "      \"partyIdType\": \"MSISDN\",",
                  "      \"partyIdentifier\": \"987654321\",",
                  "      \"fspId\": \"dfspb\"",
                  "    },",
                  "    \"personalInfo\": {",
                  "      \"complexName\": {",
                  "        \"firstName\": \"Bob\",",
                  "        \"middleName\": \"O\",",
                  "        \"lastName\": \"Babirusa\"",
                  "      },",
                  "      \"dateOfBirth\": \"1970-01-01\"",
                  "    },",
                  "    \"name\": \"Bob Babirusa\"",
                  "  },",
                  "  \"currentState\": \"partyLookupSuccess\"",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        },
        {
          "id": 5,
          "description": "initiate third party transaction request",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/thirdpartyTransaction/{ID}/initiate",
          "path": "/thirdpartyTransaction/c2470148-1be2-4c0b-aece-aa8dcb92a6cc/initiate",
          "method": "post",
          "params": {
            "ID": "c2470148-1be2-4c0b-aece-aa8dcb92a6cc"
          },
          "body": {
            "consentId": "2acf1dfa-ce45-486e-b19e-ae4ad9804a63",
            "payee": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "987654321",
                "fspId": "dfspb"
              }
            },
            "payer": {
              "partyIdType": "THIRD_PARTY_LINK",
              "partyIdentifier": "244431e2-7a56-40c6-814c-932631760fa9",
              "fspId": "dfspa"
            },
            "amountType": "SEND",
            "amount": {
              "amount": "100",
              "currency": "USD"
            },
            "transactionType": {
              "scenario": "TRANSFER",
              "initiator": "PAYER",
              "initiatorType": "CONSUMER"
            },
            "expiration": "{$requestVariables.expiration}"
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 2,
                "description": "dynamic fields",
                "exec": [
                  "expect(response.body.authorization.expiration).to.match(/[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z/)",
                  "",
                  "expect(response.body.authorization.authorizationRequestId).to.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/)"
                ]
              },
              {
                "id": 1,
                "description": "response body",
                "exec": [
                  "const expected = {",
                  "  \"authorization\": {",
                  "    \"transactionRequestId\": \"c2470148-1be2-4c0b-aece-aa8dcb92a6cc\",",
                  "    \"transferAmount\": {",
                  "      \"amount\": \"100\",",
                  "      \"currency\": \"USD\"",
                  "    },",
                  "    \"payeeReceiveAmount\": {",
                  "      \"amount\": \"100\",",
                  "      \"currency\": \"USD\"",
                  "    },",
                  "    \"fees\": {",
                  "      \"amount\": \"0\",",
                  "      \"currency\": \"USD\"",
                  "    },",
                  "    \"payer\": {",
                  "      \"partyIdType\": \"THIRD_PARTY_LINK\",",
                  "      \"partyIdentifier\": \"244431e2-7a56-40c6-814c-932631760fa9\",",
                  "      \"fspId\": \"dfspa\"",
                  "    },",
                  "    \"payee\": {",
                  "      \"partyIdInfo\": {",
                  "        \"partyIdType\": \"MSISDN\",",
                  "        \"partyIdentifier\": \"987654321\",",
                  "        \"fspId\": \"dfspb\"",
                  "      }",
                  "    },",
                  "    \"transactionType\": {",
                  "      \"scenario\": \"TRANSFER\",",
                  "      \"initiator\": \"PAYER\",",
                  "      \"initiatorType\": \"CONSUMER\"",
                  "    },",
                  "    \"challenge\": \"OWZhYjAxZTcwYjU4YzRhMzRmOWQwNzBmZjllZDFiNjc2NWVhMzA1NGI1MWZjZThjZGFjNDEyZDBmNmM2MWFhMQ\"",
                  "  },",
                  "  \"currentState\": \"authorizationReceived\"",
                  "}",
                  "",
                  "// Test these dynamic variables separately",
                  "delete response.body.authorization.authorizationRequestId",
                  "delete response.body.authorization.expiration",
                  "",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          },
          "scriptingEngine": "javascript",
          "scripts": {
            "postRequest": {
              "exec": [
                ""
              ]
            },
            "preRequest": {
              "exec": [
                "const expirationDate = new Date();",
                "expirationDate.setHours(expirationDate.getHours() + 5);",
                "requestVariables.expiration = expirationDate.toISOString()"
              ]
            }
          }
        },
        {
          "id": 6,
          "description": "approve third party authorization request",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound"
          },
          "operationPath": "/thirdpartyTransaction/{ID}/approve",
          "path": "/thirdpartyTransaction/c2470148-1be2-4c0b-aece-aa8dcb92a6cc/approve",
          "method": "post",
          "params": {
            "ID": "c2470148-1be2-4c0b-aece-aa8dcb92a6cc"
          },
          "body": {
            "authorizationResponse": {
              "responseType": "ACCEPTED",
              "signedPayload": {
                "signedPayloadType": "FIDO",
                "fidoSignedPayload": {
                  "id": "nJGhvWOzo6-bc4OTIuT9UWPmUGrzLlKbZ0ONvLPwWOEzOUr45Mov4vRWwMOYIGkGF_UTIL3nkSEug3ChycAryA",
                  "rawId": "nJGhvWOzo6+bc4OTIuT9UWPmUGrzLlKbZ0ONvLPwWOEzOUr45Mov4vRWwMOYIGkGF/UTIL3nkSEug3ChycAryA==",
                  "response": {
                    "authenticatorData": "SZYN5YgOjGh0NBcPZHZgW4/krrmihjLHmVzzuoMdl2MBAAAAAw==",
                    "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiVDFkYWFGbHFRWGhhVkdOM1dXcFZORmw2VW1oTmVsSnRUMWRSZDA1NlFtMWFhbXhzV2tSR2FVNXFZekpPVjFab1RYcEJNVTVIU1RGTlYxcHFXbFJvYWxwSFJtcE9SRVY1V2tSQ2JVNXRUVEpOVjBab1RWRSIsIm9yaWdpbiI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MCIsImNyb3NzT3JpZ2luIjpmYWxzZX0=",
                    "signature": "MEQCIH1ZF7jLnehGV7kkSTpRXIhn/XVhLh97tIf4DxBqY7sAAiBs6XD4XHlCdaCImxEvtibEGGEHM2XjzuhGsbAiPVNcLg=="
                  },
                  "type": "public-key"
                }
              }
            }
          },
          "url": "http://pisp-thirdparty-sdk:4006",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "response",
                "exec": [
                  "delete response.body.transactionStatus.transactionId",
                  "",
                  "const expected = {",
                  "  \"transactionStatus\": {",
                  "    \"transactionRequestState\": \"ACCEPTED\",",
                  "    \"transactionState\": \"COMPLETED\"",
                  "  },",
                  "  \"currentState\": \"transactionStatusReceived\"",
                  "}",
                  "",
                  "expect(response.body).to.deep.equal(expected)"
                ]
              }
            ]
          }
        }
      ]
    }
  ]
}
